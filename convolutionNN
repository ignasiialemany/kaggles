{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3004,"databundleVersionId":861823,"sourceType":"competition"}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-21T17:10:21.276457Z","iopub.execute_input":"2024-05-21T17:10:21.276865Z","iopub.status.idle":"2024-05-21T17:10:21.282336Z","shell.execute_reply.started":"2024-05-21T17:10:21.276817Z","shell.execute_reply":"2024-05-21T17:10:21.280962Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"data = pd.read_csv(\"/kaggle/input/digit-recognizer/train.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-05-21T17:10:21.283992Z","iopub.execute_input":"2024-05-21T17:10:21.284615Z","iopub.status.idle":"2024-05-21T17:10:23.885153Z","shell.execute_reply.started":"2024-05-21T17:10:21.284572Z","shell.execute_reply":"2024-05-21T17:10:23.883883Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"data.describe()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T17:10:23.888227Z","iopub.execute_input":"2024-05-21T17:10:23.888702Z","iopub.status.idle":"2024-05-21T17:10:26.525484Z","shell.execute_reply.started":"2024-05-21T17:10:23.888663Z","shell.execute_reply":"2024-05-21T17:10:26.524274Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"              label   pixel0   pixel1   pixel2   pixel3   pixel4   pixel5  \\\ncount  42000.000000  42000.0  42000.0  42000.0  42000.0  42000.0  42000.0   \nmean       4.456643      0.0      0.0      0.0      0.0      0.0      0.0   \nstd        2.887730      0.0      0.0      0.0      0.0      0.0      0.0   \nmin        0.000000      0.0      0.0      0.0      0.0      0.0      0.0   \n25%        2.000000      0.0      0.0      0.0      0.0      0.0      0.0   \n50%        4.000000      0.0      0.0      0.0      0.0      0.0      0.0   \n75%        7.000000      0.0      0.0      0.0      0.0      0.0      0.0   \nmax        9.000000      0.0      0.0      0.0      0.0      0.0      0.0   \n\n        pixel6   pixel7   pixel8  ...      pixel774      pixel775  \\\ncount  42000.0  42000.0  42000.0  ...  42000.000000  42000.000000   \nmean       0.0      0.0      0.0  ...      0.219286      0.117095   \nstd        0.0      0.0      0.0  ...      6.312890      4.633819   \nmin        0.0      0.0      0.0  ...      0.000000      0.000000   \n25%        0.0      0.0      0.0  ...      0.000000      0.000000   \n50%        0.0      0.0      0.0  ...      0.000000      0.000000   \n75%        0.0      0.0      0.0  ...      0.000000      0.000000   \nmax        0.0      0.0      0.0  ...    254.000000    254.000000   \n\n           pixel776     pixel777      pixel778      pixel779  pixel780  \\\ncount  42000.000000  42000.00000  42000.000000  42000.000000   42000.0   \nmean       0.059024      0.02019      0.017238      0.002857       0.0   \nstd        3.274488      1.75987      1.894498      0.414264       0.0   \nmin        0.000000      0.00000      0.000000      0.000000       0.0   \n25%        0.000000      0.00000      0.000000      0.000000       0.0   \n50%        0.000000      0.00000      0.000000      0.000000       0.0   \n75%        0.000000      0.00000      0.000000      0.000000       0.0   \nmax      253.000000    253.00000    254.000000     62.000000       0.0   \n\n       pixel781  pixel782  pixel783  \ncount   42000.0   42000.0   42000.0  \nmean        0.0       0.0       0.0  \nstd         0.0       0.0       0.0  \nmin         0.0       0.0       0.0  \n25%         0.0       0.0       0.0  \n50%         0.0       0.0       0.0  \n75%         0.0       0.0       0.0  \nmax         0.0       0.0       0.0  \n\n[8 rows x 785 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>label</th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>42000.000000</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>...</td>\n      <td>42000.000000</td>\n      <td>42000.000000</td>\n      <td>42000.000000</td>\n      <td>42000.00000</td>\n      <td>42000.000000</td>\n      <td>42000.000000</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>4.456643</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.219286</td>\n      <td>0.117095</td>\n      <td>0.059024</td>\n      <td>0.02019</td>\n      <td>0.017238</td>\n      <td>0.002857</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2.887730</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>6.312890</td>\n      <td>4.633819</td>\n      <td>3.274488</td>\n      <td>1.75987</td>\n      <td>1.894498</td>\n      <td>0.414264</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>9.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>254.000000</td>\n      <td>254.000000</td>\n      <td>253.000000</td>\n      <td>253.00000</td>\n      <td>254.000000</td>\n      <td>62.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 785 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"#normalized pixel values\npixel_vars = [var for var in data.columns if var.startswith(\"pixel\")]\nfor var in pixel_vars:\n    data[var] /= 255","metadata":{"execution":{"iopub.status.busy":"2024-05-21T17:10:26.527153Z","iopub.execute_input":"2024-05-21T17:10:26.527922Z","iopub.status.idle":"2024-05-21T17:10:27.114758Z","shell.execute_reply.started":"2024-05-21T17:10:26.527878Z","shell.execute_reply":"2024-05-21T17:10:27.113427Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"features = data.iloc[:, 1:].values  # Excludes the label if it's the first column\nlabels = data.iloc[:,0].values","metadata":{"execution":{"iopub.status.busy":"2024-05-21T17:10:27.117231Z","iopub.execute_input":"2024-05-21T17:10:27.118155Z","iopub.status.idle":"2024-05-21T17:10:27.556348Z","shell.execute_reply.started":"2024-05-21T17:10:27.118110Z","shell.execute_reply":"2024-05-21T17:10:27.554702Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"features_reshaped = features.reshape(-1,28,28,1)\n\n#plot one dataset\nplt.imshow(features_reshaped[10,:,:])","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:09:05.727782Z","iopub.execute_input":"2024-05-21T18:09:05.728857Z","iopub.status.idle":"2024-05-21T18:09:05.940485Z","shell.execute_reply.started":"2024-05-21T18:09:05.728812Z","shell.execute_reply":"2024-05-21T18:09:05.939242Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"<matplotlib.image.AxesImage at 0x78f161d8e950>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"#convert dataset to tensor\nfeatures_tensor = tf.convert_to_tensor(features_reshaped, dtype=tf.float32)\nlabels_tensor = tf.convert_to_tensor(labels, dtype=tf.int32)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:09:08.898704Z","iopub.execute_input":"2024-05-21T18:09:08.899938Z","iopub.status.idle":"2024-05-21T18:09:09.278626Z","shell.execute_reply.started":"2024-05-21T18:09:08.899897Z","shell.execute_reply":"2024-05-21T18:09:09.277240Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"# Assuming features_tensor and labels_tensor are your datasets\nN_exp = features_tensor.shape[0]\nindices = tf.range(start=0, limit=N_exp, dtype=tf.int32)\nshuffled_indices = tf.random.shuffle(indices)\n\nfeatures_tensor = tf.gather(features_tensor, shuffled_indices)\nlabels_tensor = tf.gather(labels_tensor, shuffled_indices)\n\n# Calculate the number of training examples\ntrain_size = int(0.8 * N_exp)\n\n# Split the features and labels into training and validation sets\nX_train = features_tensor[:train_size]\ny_train = labels_tensor[:train_size]\nX_valid = features_tensor[train_size:]\ny_valid = labels_tensor[train_size:]","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:50:39.458200Z","iopub.execute_input":"2024-05-21T18:50:39.458797Z","iopub.status.idle":"2024-05-21T18:50:39.518900Z","shell.execute_reply.started":"2024-05-21T18:50:39.458756Z","shell.execute_reply":"2024-05-21T18:50:39.517758Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"code","source":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\n\n# Training data generator with augmentation\ntrain_datagen = ImageDataGenerator(\n    rotation_range=20,\n    shear_range=0.15,\n    fill_mode='nearest'\n)\n\n# Validation data generator without augmentation\nvalidation_datagen = ImageDataGenerator()  # No augmentation for validation data\n\n# Fit the generator to your training data\ntrain_datagen.fit(X_train)\n\n# Configure generators to load data\ntrain_generator = train_datagen.flow(X_train, y_train, batch_size=32)\nvalidation_generator = validation_datagen.flow(X_valid, y_valid, batch_size=32)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-21T19:08:32.785764Z","iopub.execute_input":"2024-05-21T19:08:32.786394Z","iopub.status.idle":"2024-05-21T19:08:32.839574Z","shell.execute_reply.started":"2024-05-21T19:08:32.786353Z","shell.execute_reply":"2024-05-21T19:08:32.838200Z"},"trusted":true},"execution_count":63,"outputs":[]},{"cell_type":"code","source":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout, Activation\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.layers import BatchNormalization\n\n# Create a Sequential model\nmodel = Sequential([\n    # Convolutional layer: 32 filters, kernel size of 3x3\n    Conv2D(32, kernel_size=(3, 3), input_shape=(28, 28, 1)),\n    BatchNormalization(),\n    Activation('relu'),\n    # MaxPooling layer: Pooling size of 2x2\n    MaxPooling2D(pool_size=(2, 2)),\n    \n    Conv2D(16, kernel_size=(3, 3)),\n    BatchNormalization(),\n    Activation('relu'),\n\n    # Flatten layer to flatten the output of the previous layers into a single vector\n    Flatten(),\n    # Dense layer with increased capacity\n    Dense(128, activation='relu'),\n    BatchNormalization(),\n    # Dropout layer to reduce overfitting\n    Dropout(0.5),\n    # Output layer with 10 units (for 10 classes of digits 0-9) and softmax activation\n    Dense(10, activation='softmax')\n])\n\n\n# Compile the model\nmodel.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-05-21T19:08:36.149746Z","iopub.execute_input":"2024-05-21T19:08:36.150120Z","iopub.status.idle":"2024-05-21T19:08:36.263478Z","shell.execute_reply.started":"2024-05-21T19:08:36.150093Z","shell.execute_reply":"2024-05-21T19:08:36.262285Z"},"trusted":true},"execution_count":64,"outputs":[]},{"cell_type":"code","source":"# Model setup as previously defined\nhistory = model.fit(\n    train_generator,\n    epochs=10,\n    validation_data=validation_generator)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T19:08:39.136037Z","iopub.execute_input":"2024-05-21T19:08:39.137332Z","iopub.status.idle":"2024-05-21T19:16:13.334685Z","shell.execute_reply.started":"2024-05-21T19:08:39.137282Z","shell.execute_reply":"2024-05-21T19:16:13.332071Z"},"trusted":true},"execution_count":65,"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m44s\u001b[0m 38ms/step - accuracy: 0.8718 - loss: 0.4329 - val_accuracy: 0.9792 - val_loss: 0.0658\nEpoch 2/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 38ms/step - accuracy: 0.9678 - loss: 0.1013 - val_accuracy: 0.9804 - val_loss: 0.0625\nEpoch 3/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 39ms/step - accuracy: 0.9771 - loss: 0.0776 - val_accuracy: 0.9793 - val_loss: 0.0650\nEpoch 4/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 39ms/step - accuracy: 0.9797 - loss: 0.0699 - val_accuracy: 0.9639 - val_loss: 0.1210\nEpoch 5/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m40s\u001b[0m 38ms/step - accuracy: 0.9778 - loss: 0.0700 - val_accuracy: 0.9874 - val_loss: 0.0394\nEpoch 6/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 39ms/step - accuracy: 0.9830 - loss: 0.0556 - val_accuracy: 0.9874 - val_loss: 0.0424\nEpoch 7/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 39ms/step - accuracy: 0.9827 - loss: 0.0518 - val_accuracy: 0.9907 - val_loss: 0.0296\nEpoch 8/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 39ms/step - accuracy: 0.9847 - loss: 0.0503 - val_accuracy: 0.9907 - val_loss: 0.0335\nEpoch 9/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m43s\u001b[0m 41ms/step - accuracy: 0.9858 - loss: 0.0454 - val_accuracy: 0.9883 - val_loss: 0.0382\nEpoch 10/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m44s\u001b[0m 42ms/step - accuracy: 0.9868 - loss: 0.0423 - val_accuracy: 0.9873 - val_loss: 0.0403\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[65], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# Model setup as previously defined\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m history \u001b[38;5;241m=\u001b[39m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m      3\u001b[0m \u001b[43m    \u001b[49m\u001b[43mtrain_generator\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m      4\u001b[0m \u001b[43m    \u001b[49m\u001b[43mepochs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m10\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m      5\u001b[0m \u001b[43m    \u001b[49m\u001b[43mvalidation_data\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvalidation_generator\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py:117\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    115\u001b[0m filtered_tb \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m    116\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 117\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfn\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    118\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m    119\u001b[0m     filtered_tb \u001b[38;5;241m=\u001b[39m _process_traceback_frames(e\u001b[38;5;241m.\u001b[39m__traceback__)\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "],"ename":"KeyboardInterrupt","evalue":"","output_type":"error"}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\n# Accessing the history data\nacc = history.history['accuracy']\nval_acc = history.history['val_accuracy']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\nepochs = range(1, len(acc) + 1)\n\n# Plot training and validation accuracy\nplt.figure(figsize=(12, 5))\nplt.subplot(1, 2, 1)\nplt.plot(epochs, acc, 'bo', label='Training accuracy')\nplt.plot(epochs, val_acc, 'b', label='Validation accuracy')\nplt.title('Training and Validation accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend()\n\n# Plot training and validation loss\nplt.subplot(1, 2, 2)\nplt.plot(epochs, loss, 'bo', label='Training loss')\nplt.plot(epochs, val_loss, 'b', label='Validation loss')\nplt.title('Training and Validation loss')\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend()\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-21T19:16:20.771875Z","iopub.execute_input":"2024-05-21T19:16:20.772548Z","iopub.status.idle":"2024-05-21T19:16:21.276250Z","shell.execute_reply.started":"2024-05-21T19:16:20.772514Z","shell.execute_reply":"2024-05-21T19:16:21.274552Z"},"trusted":true},"execution_count":66,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":"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2NjY4vg4RERERERERDozWCJfqVIlmJubIzExUaM8MTERVatW1fqeypUrY+vWrUhLS8Pt27dx9epV2NrawtPTU13HyckJderU0Xhf7dq1cefOnTxjsbKygp2dncZGREREREREZIwMlshbWlqicePG2Lt3r7pMqVRi7969aNas2SvfK5fL4eLigqysLGzevBmdO3dWv9aiRQtcu3ZNo/4///wDd3d3/X4AIiIiIiIiIgOwMOTBQ0NDERwcjCZNmqBp06aIjIxEWloaBg4cCADo378/XFxcEBERAQA4fvw44uLi4Ovri7i4OISHh0OpVGLChAnqfX722Wdo3rw5vv76a/Tq1QsnTpzA//73P/zvf/8zyGckIiIiIiIi0ieDJvK9e/fG/fv3ERYWhoSEBPj6+mLXrl3qCfDu3LmjMf79xYsXmDJlCm7evAlbW1t06NABq1evhoODg7qOn58ftmzZgkmTJmH69OmoXr06IiMj0bdv3+L+eERERERERER6Z9B15I0V15YlIiJjw2uTfvF8EhGRsTGJdeSJiIiIiIiISHdM5ImIiIiIiIhMCBN5IiIiIiIiIhPCRJ6IiIiIiIjIhDCRJyIiIiIiIjIhTOSJiIiIiIiITAgTeSIiIiIiIiITwkSeiIiIiIiIyIQwkSciIiIiIiIyITon8h4eHpg+fTru3LlTFPEQERERERER0SvonMiHhIQgKioKnp6eaNu2LTZs2ID09PSiiI2IiIiIiIiIXlKgRP7s2bM4ceIEateujVGjRsHJyQkjR47E6dOniyJGIiIiIiIiIvp/BR4j36hRIyxYsAD37t3D1KlT8eOPP8LPzw++vr5Yvnw5JEnSZ5xEREREREREBMCioG/MzMzEli1bsGLFCkRHR+PNN9/Exx9/jLt37+KLL75ATEwM1q1bp89YiYiIiIiIiEo9nRP506dPY8WKFVi/fj3MzMzQv39/fPfdd6hVq5a6TteuXeHn56fXQImIiIiIiIioAIm8n58f2rZtiyVLlqBLly4oU6ZMrjrVq1fHBx98oJcAiYiIiIiIiCibzon8zZs34e7u/so6ZcuWxYoVKwocFBERERERERFpp/Nkd0lJSTh+/Hiu8uPHj+Pvv//WS1BEREREREREpJ3OifyIESMQGxubqzwuLg4jRozQS1BEREREREREpJ3Oifzly5fRqFGjXOUNGzbE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+EDvARIREVHx6tat2ytff/LkiU7703WFmoyMDFy+fFn9OC4uDmfPnoWtrS1q1KgBgCvUEBFR6aZzIj9jxgz8999/eOedd2BhId6uVCrRv39/jpEnIiIqAezt7V/7ev/+/fO9P11XqLl37x4aNmyofj537lzMnTsXrVq1wv79+wFwhRoiIirddJ61XuX69es4e/YsrK2tUb9+fbi7u+s7NoMxppmBiYiIAF6b9I3nk4iIjI0u1yadW+RVvL294e3tXdC3ExEREREREVEB6DzZXffu3TFr1qxc5bNnz861tjwRERERERER6ZfOifzBgwfRoUOHXOXt27fHwYMH9RIUEREREREREWmncyKfmpoKS0vLXOVlypRBSkqKXoIiIiIiIiIiIu10TuTr16+PjRs35irfsGED6tSpo5egiIiIiIiIiEg7nSe7+/LLL9GtWzfcuHEDb7/9NgBg7969WLduHTZt2qT3AImIiIiIiIgom86JfKdOnbB161Z8/fXX2LRpE6ytreHj44M///wTFSpUKIoYiYiIiIiIiOj/FWj5uY4dO6Jjx44AxFp369evx7hx43Dq1CkoFAq9BkhERERERERE2XQeI69y8OBBBAcHw9nZGd9++y3efvtt/PXXX/qMjYiIiIiIiIheolOLfEJCAlauXImffvoJKSkp6NWrF9LT07F161ZOdEdERERERERUDPLdIt+pUyfUrFkT58+fR2RkJO7du4eFCxcWZWxERERERERE9JJ8t8jv3LkTo0ePxrBhw+Dt7V2UMRERERERERFRHvLdIn/48GE8ffoUjRs3hr+/PxYtWoQHDx4UZWxERERERERE9JJ8J/JvvvkmfvjhB8THx+PTTz/Fhg0b4OzsDKVSiejoaDx9+rQo4yQiIiIiIiIiFGDW+rJly2LQoEE4fPgwLly4gLFjx+Kbb75BlSpV8P777xdFjERERERERET0/wq8/BwA1KxZE7Nnz8bdu3exfv16fcVERERERERERHkoVCKvYm5uji5dumDbtm362B0RERERERER5UEviTwRERERERERFQ8m8kREREREREQmhIk8ERERERERkQlhIk9ERERERERkQpjIExEREREREZkQJvJEREREREREJoSJPBEREREREZEJYSJPREREREREZEKYyBMRERERERGZECbyRERERERERCaEiTwRERERERGR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OOZ6Ij0iiKjeCwkJEcbGxsLS0lJjW7ZsmRBCCADilVde0XhOz549xbRp04QQQsTFxQlbW1tRVFSkPp6UlCSMjIxEfn6+EEIIJycnMW/evAfGAEDMnz9f/bioqEgAELt37xZCCOHv7y8mTJignQ9MRERUzzDXExkW3iNPRACA5557DrGxsRr7GjdurP67t7e3xjFvb29kZGQAALKzs+Hu7g5LS0v18V69ekGlUiEnJwcKhQJ//PEH+vfv/9AYunTpov67paUlrK2tcfXqVQDAtGnTMHLkSBw/fhwDBw5EQEAAfHx8nuizEhER1UfM9USGg4U8EQGQkun9w9+0RalU1ui8Bg0aaDxWKBRQqVQAgMGDB+PChQv49ttvkZycjP79+yMsLAyrVq3SerxERESGiLmeyHDwHnkiqpEjR45Ueezq6goAcHV1RWZmJoqLi9XHU1NTYWRkhPbt28PKygpt2rRBSkrKU8XQrFkzhISEYPPmzYiJiUFcXNxTvR4RERHdw1xPpD/YI09EAICSkhLk5+dr7DMxMVFPMrN9+3Z4enriH//4Bz799FMcO3YMGzduBAAEBQVh4cKFCAkJwaJFi3Dt2jVERERg/PjxsLe3BwAsWrQIr7zyCuzs7DB48GDcvHkTqampiIiIqFF8CxYsQPfu3dGpUyeUlJRg165d6l8uiIiI6NGY64kMBwt5IgIA7NmzB46Ojhr72rdvj1OnTgGQZpndunUrpk+fDkdHR3z22Wfo2LEjAMDCwgLfffcdIiMj4eXlBQsLC4wcORJr1qxRv1ZISAju3LmDd999F7NmzULTpk0xatSoGsdnamqKuXPn4vz581Aqlejduze2bt2qhU9ORERUPzDXExkOhRBCyB0EEdVtCoUCiYmJCAgIkDsUIiIi0gHmeiL9wnvkiYiIiIiIiPQIC3kiIiIiIiIiPcKh9URERERERER6hD3yRERERERERHqEhTwRERERERGRHmEhT0RERERERKRHWMgTERERERER6REW8kRERERERER6hIU8ERERERERkR5hIU9ERERERESkR1jIExEREREREemR/weC3mhSlhpt1AAAAABJRU5ErkJggg=="},"metadata":{}}]},{"cell_type":"code","source":"data_test = pd.read_csv(\"/kaggle/input/digit-recognizer/test.csv\")\ndata_test.head()\n","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:18:34.669483Z","iopub.execute_input":"2024-05-21T18:18:34.669857Z","iopub.status.idle":"2024-05-21T18:18:36.062945Z","shell.execute_reply.started":"2024-05-21T18:18:34.669828Z","shell.execute_reply":"2024-05-21T18:18:36.061655Z"},"trusted":true},"execution_count":37,"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"   pixel0  pixel1  pixel2  pixel3  pixel4  pixel5  pixel6  pixel7  pixel8  \\\n0       0       0       0       0       0       0       0       0       0   \n1       0       0       0       0       0       0       0       0       0   \n2       0       0       0       0       0       0       0       0       0   \n3       0       0       0       0       0       0       0       0       0   \n4       0       0       0       0       0       0       0       0       0   \n\n   pixel9  ...  pixel774  pixel775  pixel776  pixel777  pixel778  pixel779  \\\n0       0  ...         0         0         0         0         0         0   \n1       0  ...         0         0         0         0         0         0   \n2       0  ...         0         0         0         0         0         0   \n3       0  ...         0         0         0         0         0         0   \n4       0  ...         0         0         0         0         0         0   \n\n   pixel780  pixel781  pixel782  pixel783  \n0         0         0         0         0  \n1         0         0         0         0  \n2         0         0         0         0  \n3         0         0         0         0  \n4         0         0         0         0  \n\n[5 rows x 784 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>pixel9</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 784 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"features_test = data_test.iloc[:,:].values\nfeatures_test = features_test/255\nfeatures_test = features_test.reshape(-1,28,28)\nfeatures_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:18:37.611786Z","iopub.execute_input":"2024-05-21T18:18:37.612195Z","iopub.status.idle":"2024-05-21T18:18:37.696078Z","shell.execute_reply.started":"2024-05-21T18:18:37.612162Z","shell.execute_reply":"2024-05-21T18:18:37.694883Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"(28000, 28, 28)"},"metadata":{}}]},{"cell_type":"code","source":"predictions = model.predict(features_test)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:18:39.911409Z","iopub.execute_input":"2024-05-21T18:18:39.911992Z","iopub.status.idle":"2024-05-21T18:18:44.584002Z","shell.execute_reply.started":"2024-05-21T18:18:39.911961Z","shell.execute_reply":"2024-05-21T18:18:44.582623Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"\u001b[1m875/875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"predictions = np.argmax(predictions, axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:18:45.871035Z","iopub.execute_input":"2024-05-21T18:18:45.871410Z","iopub.status.idle":"2024-05-21T18:18:45.876793Z","shell.execute_reply.started":"2024-05-21T18:18:45.871381Z","shell.execute_reply":"2024-05-21T18:18:45.875438Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"predictions","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:18:47.696081Z","iopub.execute_input":"2024-05-21T18:18:47.696512Z","iopub.status.idle":"2024-05-21T18:18:47.704913Z","shell.execute_reply.started":"2024-05-21T18:18:47.696480Z","shell.execute_reply":"2024-05-21T18:18:47.703522Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"array([2, 0, 9, ..., 3, 9, 2])"},"metadata":{}}]},{"cell_type":"code","source":"submission = pd.DataFrame({'ImageId': range(1, len(predictions) + 1), 'Label': predictions})\nsubmission.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-05-21T18:18:49.910832Z","iopub.execute_input":"2024-05-21T18:18:49.911197Z","iopub.status.idle":"2024-05-21T18:18:49.941691Z","shell.execute_reply.started":"2024-05-21T18:18:49.911170Z","shell.execute_reply":"2024-05-21T18:18:49.940436Z"},"trusted":true},"execution_count":42,"outputs":[]}]}